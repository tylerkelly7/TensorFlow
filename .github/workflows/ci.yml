name: TensorFlow CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  # ------------------------------------------------------------
  # Run Unit + Integration Tests
  # ------------------------------------------------------------
  test:
    name: Run Pytest Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Install Project in Editable Mode
        run: |
          pip install -e .

      - name: Run Tests with Coverage
        env:
          TF_CPP_MIN_LOG_LEVEL: 2
          # Disable MLflow/W&B tracking in CI environment
          USE_MLFLOW: false
          USE_WANDB: false
        run: |
          echo "[INFO] Running unit and integration tests..."
          pytest -q --disable-warnings --maxfail=1 --cov=src --cov-report=term-missing

  # ------------------------------------------------------------
  # Verify Docker Build Integrity
  # ------------------------------------------------------------
  docker-build:
    name: Verify Docker Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          echo "[INFO] Building Docker image for TensorFlow..."
          docker build -t tensorflow .

      - name: Run Container Smoke Test
        run: |
          echo "[INFO] Running container smoke test..."
          docker run --rm tensorflow python -c "import tensorflow as tf; print('TensorFlow version:', tf.__version__)"




